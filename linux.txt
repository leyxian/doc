du -h --max-depth=1 /

lsof | grep delete

ps -ef | grep php

kill -9 xxxx

whereis httpd

date

cat /dev/null > /var/log/error_log.log

du -sh /* 2>/dev/null | sort -hr | head -3

yum -y install epel-release

yum clean

yum clean headers

yum clean packages

yum clean oldheaders

ÍøÂç
mtr vpngate.net

¶Ë¿Ú¼ì²â
netstat -a | egrep 'Proto|LISTEN'

cat /proc/cpuinfo | grep name | cut -f2 -d: | uniq -c 

cat /proc/cpuinfo | grep physical | uniq -c 

cat /proc/meminfo 

cat /proc/version

uname -a

ÈÕÖ¾ÇÐ¸î
usr/local/tomcat/apache-tomcat-7.0.54/logs/catalina.out {

	rotate 31

	daily
	
  copytruncate

	compress

	notifempty

	missingok
	
  dateext

}

rotate 31 ±íÊ¾±£Áô31ÌìµÄ±¸·ÝÎÄ¼þ  
daily ±íÊ¾Ã¿ÌìÕûÀíÒ»´Î  
copytruncate ±íÊ¾ÏÈ¸´ÖÆlogÎÄ¼þµÄÄÚÈÝ£¬È»ºóÔÙÇå¿Õ  
compress ±íÊ¾Ñ¹Ëõ±¸·ÖÎÄ¼þ  
missingok ±íÊ¾Èç¹ûÕÒ²»µ½logÎÄ¼þÒ²Ã»OK  
notifempty ±íÊ¾Èç¹ûlogÎÄ¼þÊÇ¿ÕµÄ£¬¾Í²»½øÐÐrotate  
dateext ±íÊ¾±¸·ÝµÄÈÕÖ¾ÎÄ¼þºó×º¸ñÊ½ÎªYYYYMMDD
¿ÉÒÔÍ¨¹ý/usr/sbin/logrotate -f /etc/logrotate.confÀ´Ö´ÐÐ

## ºóÌ¨ÔËÐÐÃüÁî
nohup command {option} > myout.file 2>&1 &?

## ¿ª·Å¶Ë¿Ú
netstat -tunlp


#!/bin/ksh
#crontab -e  
#0,5,10,15,20,25,30,40,45,50,55 * * * * /usr/bin/autokill.sh &  #ÉèÖÃÎªÃ¿5·ÖÖÓ¼ì²éÒ»´Î³¬Ê±½ø³Ì
#ÎªÁË°²È«±£ÏÕÆð¼û,´Ë°æ½Å±¾µÄÇå³ý·¶Î§Îª:ÓÉÖÕ¶ËÆô¶¯µÄ,Õ¼ÓÃCUPÊ±¼ä³¬¹ýÖ¸¶¨Ê±¼ä³¤¶ÈµÄ,·ÇrootÓÃ»§µÄ½ø³Ì»ò½©Ê¬½ø³Ì  ^_^
 
#¼ì²â²ÎÊý
killlog="/tmp/kill.log"    #Ä¬ÈÏ×Ô¶¯Çå³ý³¬Ê±½ø³Ì»ò½©ËÀ½ø³ÌµÄÈÕÖ¾
out=60                     # Ä¬ÈÏµÄ³¬Ê±Ê±¼ä£¬ÒÔÃëÎªµ¥Î»£¬Ä¬ÈÏÎª60Ãë£¬·¶Î§Îª10Ãë--36000Ãë
trap 'rm /tmp/kill.tmp 2>/dev/null' 0 1 2 3 9 15
test $LOGNAME != root && { echo "Sorry ! ±¾ ½Å ±¾ Ö» ÄÜ ÓÉ root ²Ù ×÷ !

" ; exit 1 ; }
test "$out" || { echo "
  ³¬Ê±Ê±ÏÞ²»ÄÜÎª¿Õ
" ; exit 1 ; }
test "$(echo $out | sed -n '/^[0-9][0-9]*$/p')" || { echo "
  ³¬Ê±Ê±ÏÞÖ»ÄÜÎªÕûÊýÖµ
" ; exit 1 ; }
test $out -ge 10 -a $out -le 36000 || { echo "
  ³¬Ê±Ê±ÏÞ·¶Î§Îª10Ãë--36000Ãë
" ; exit 1 ; }
 
#²éÕÒ³¬Ê±»ò½©Ê¬½ø³Ì
ps -efl |awk -v outtest=$out '{ outtime=timetest($14) }
$2~/Z/ || ( $3!~/root/ && $13!~/?/ && outtime=="outtime" ) 
{print $3,$4,$13,$2,$14,$15 }
function timetest(ot)
{
hour=substr(ot,1,2)
min=substr(ot,4,2)
sec=substr(ot,7,8)
if ( hour*3600+min*60+sec > outtest)
return "outtime"
else
return "good" 
} ' >/tmp/kill.tmp 2>/dev/null
 
#±£´æÇå³ýÁÐ±í
if [ -s /tmp/kill.tmp ]
then
pass=0 
error=0
echo "
Çå ³ý Ê± ¼ä:  "$(date +%y/%m/%d-%H:%M:%S)"
" >> $killlog
awk 'BEGIN{printf("%-8s%-8s%-8s%-7s%-10s%-30s
"),"ÓÃ»§Ãû","½ø³ÌºÅ","ÖÕ¶ËºÅ","×´Ì¬","Õ¼ÓÃÊ±¼ä","ÈÎÎñÃû"} 
{ state=statetest($4) ; printf("%-8s%-8s%-8s%-7s%-10s%-30s
"),$1,$2,$3,state,$5,$6} END{print "
"}
function statetest(test)
{  
 if (test=="S") return "Ë¯Ãß"
 if (test=="R") return "ÔËÐÐ"
 if (test=="Z") return "½©Ê¬"
 if (test=="O") return "²»´æÔÚ"
 if (test=="B") return "µÈ´ý"
 if (test=="T") return "Í£Ö¹"
 if (test=="I") return "ÖÐ¼ä"
}' /tmp/kill.tmp >> $killlog 2>/dev/null
 
#Çå³ý½ø³Ì
for pid in $(awk '{print $2}' /tmp/kill.tmp |sort -rn) 
do 
kill -9 $pid  
test $? -eq 0 && 
{ echo "×Ô¶¯Çå³ý½ø³Ì $pid ³É¹¦" | awk '{printf("
%-14s%-10s%-4s"),$1,$2,$3}' ; 
echo "×Ô¶¯Çå³ý½ø³Ì $pid ³É¹¦"   | awk '{printf("%-14s%-10s%-4s
"),$1,$2,$3}' 
>> $killlog 2>/dev/null ;  pass=$((pass+1)) ; } || 
{ echo "×Ô¶¯Çå³ý½ø³Ì $pid Ê§°Ü" | awk '{printf("
%-14s%-10s%-4s"),$1,$2,$3}' ; 
echo "×Ô¶¯Çå³ý½ø³Ì $pid Ê§°Ü"   | awk '{printf("%-14s%-10s%-4s
"),$1,$2,$3}' 
>> $killlog 2>/dev/null ; error=$((error+1)) ; }
done
 
#±£´æ×îÖÕÍ³¼Æ½á¹û
test $error -eq 0 && 
{ echo "´Ë´Î¹²Çå³ý ${pass} ¸ö½ø³Ì³É¹¦" | awk '{printf("

%-14s%-4s%-10s

"),$1,$2,$3}'
  echo "´Ë´Î¹²Çå³ý ${pass} ¸ö½ø³Ì³É¹¦" | awk '{printf("
%-14s%-4s%-10s

"),$1,$2,$3}' 
>> $killlog 2>/dev/null ; } || 
{ echo "´Ë´Î¹²Çå³ý ${pass} ¸ö½ø³Ì³É¹¦ ${error} ¸ö½ø³ÌÊ§°Ü" | 
awk '{printf("

%-14s%-4s%-16s%-10s%-10s

"),$1,$2,$3,$4,$5}' ; 
  echo "´Ë´Î¹²Çå³ý ${pass} ¸ö½ø³Ì³É¹¦ ${error} ¸ö½ø³ÌÊ§°Ü" | 
awk '{printf("

%-14s%-4s%-16s%-10s%-10s

"),$1,$2,$3,$4,$5}' >> $killlog 2>/dev/null ; }
fi

iptables -L
iptables -I INPUT -s 183.160.107.239 -p tcp --dport 3306 -j ACCEPT

iptables -I INPUT -s 180.162.0.0/16 -p tcp --dport 3306 -j ACCEPT

iptables -I INPUT -s 36.7.0.0/16 -p tcp --dport 3306 -j ACCEPT

iptables-save

iptables-restore

//####±¸·ÝÍ¬²½
yum install xtrabackup

innobackupex --user=root --password=MJsujrctG6pU0OUG --defaults-file=/etc/my.cnf /transimg/back --include=wushi --no-timestamp

--include=navy
--databases=navy

######script.sh
#!/bin/sh
MYSQL="mysql -h123.57.133.51 -uley -pzq1988 --default-character-set=utf8 -A -N"
stime=`date -d "20 day ago" +%s`
sql="SELECT COUNT(*) AS c FROM mycrm.xy_account WHERE style=0 AND ((block=0) or  (block=1 and blocktime>$stime and blocktime is not null))"
# echo $sql
result="$($MYSQL -e "$sql")"
# result=726
pagesize=30
page=$(($result/$pagesize+1))
# echo $page
for((k=1;k<=$page;k++))
do
    MM=`ps -aux |grep "php /data/cron/script2.php $k $pagesize"$ |grep -v "grep" |wc -l`
    if [ "$MM" == "0" ]; then
        echo "$k restart"
        nohup php /data/cron/script2.php $k $pagesize >> /data/cron/script2.log 2>&1 &
    fi
done
MM=`ps -aux |grep "php /data/cron/createsendorder.php" |grep -v "grep" |wc -l`
if [ "$MM" == "0" ]; then
    nohup php /data/cron/createsendorder.php >> /data/cron/createsendorder.log 2>&1 &
fi

###### Çå³ý½ø³Ì clear kill
#!/bin/sh
if [ $# -lt 1 ]
then
  echo "È±ÉÙ²ÎÊý"
  exit 1
fi

ps -ef|grep $1|grep -v grep|awk '{print $2}'|xargs kill -9


chattr +i /ÍøÕ¾Ä¿Â¼/.user.ini

//×ÖÌå
centos
yum install bitmap-fonts bitmap-fonts-cjk
ubuntn
sudo apt-get install xfonts-wqy

//nodejs
yum install epel-release


// ssl Ö¤Êé

// Éú³É·þÎñÆ÷¶ËË½Ô¿
ÃüÁî£ºopenssl genrsa -out api.transportjp.com.server.key 1024
// Éú³É·þÎñÆ÷¶Ë¹«Ô¿
ÃüÁî£ºopenssl rsa -in api.transportjp.com.server.key -pubout -out api.transportjp.com.server.pem

// Éú³É CA Ë½Ô¿
ÃüÁî£ºopenssl genrsa -out api.transportjp.com.ca.key 1024
ÃüÁî£ºopenssl req -new -key api.transportjp.com.ca.key -out api.transportjp.com.ca.csr
ÃüÁî£ºopenssl x509 -req -in api.transportjp.com.ca.csr -signkey api.transportjp.com.ca.key -out api.transportjp.com.ca.crt

// ·þÎñÆ÷¶ËÐèÒªÏò CA »ú¹¹ÉêÇëÇ©ÃûÖ¤Êé£¬ÔÚÉêÇëÇ©ÃûÖ¤ÊéÖ®Ç°ÒÀÈ»ÊÇ´´½¨×Ô¼ºµÄ CSR ÎÄ¼þ
ÃüÁî£ºopenssl req -new -key api.transportjp.com.server.key -out api.transportjp.com.server.csr
// Ïò×Ô¼ºµÄ CA »ú¹¹ÉêÇëÖ¤Êé£¬Ç©Ãû¹ý³ÌÐèÒª CA µÄÖ¤ÊéºÍË½Ô¿²ÎÓë£¬×îÖÕ°ä·¢Ò»¸ö´øÓÐ CA Ç©ÃûµÄÖ¤Êé
ÃüÁî£ºopenssl x509 -req -CA api.transportjp.com.ca.crt -CAkey api.transportjp.com.ca.key -CAcreateserial -in api.transportjp.com.server.csr -out api.transportjp.com.server.crt

//Ê¹ÓÃopenssl ½øÐÐ×ª»»
ÃüÁî£ºopenssl x509 -in api.transportjp.com.server.crt -out api.transportjp.com.server.cer -outform der

//version 2
openssl genrsa -des3 -out dev.apistore.transportjp.com.key 1024
openssl req -new -subj /C=CN/ST=AnHui/L=HeFei/O=iTranswarp/OU=iTranswarp/CN=dev.apistore.transportjp.com -key dev.apistore.transportjp.com.key -out dev.apistore.transportjp.com.csr
mv dev.apistore.transportjp.com.key dev.apistore.transportjp.com.origin.key
openssl rsa -in dev.apistore.transportjp.com.origin.key -out dev.apistore.transportjp.com.key
openssl x509 -req -days 3650 -in dev.apistore.transportjp.com.csr -signkey dev.apistore.transportjp.com.key -out dev.apistore.transportjp.com.crt

<VirtualHost *:443>
   SSLEngine On
   SSLCertificateFile conf/ssl/server.crt
   SSLCertificateKeyFile conf/ssl/server.key
   SSLCertificateChainFile conf/ssl/ca.crt
</VirtualHost>


//°¢ÀïÔÆ´ÅÅÌÀ©ÈÝ
//https://help.aliyun.com/document_detail/25452.html?spm=5176.11065259.1996646101.searchclickresult.1db338f2uDGalg

//ÂÞÁÐ´ÅÅÌ
lsblk -f

ÖØÆô·þÎñÆ÷ºó

umount /dev/xvdb

fdisk -l ÂÞÁÐ·ÖÇøÐÅÏ¢²¢¼ÇÂ¼À©ÈÝÇ°Êý¾ÝÅÌµÄ×îÖÕÈÝÁ¿¡¢ÆðÊ¼ÉÈÇø£¨First sector£©Î»ÖÃ

fdisk /dev/xvdb

d ²¢°´»Ø³µ¼ü£¬É¾³ýÔ­À´µÄ·ÖÇø

n ²¢°´»Ø³µ¼ü£¬¿ªÊ¼´´½¨ÐÂµÄ·ÖÇø

p ²¢°´»Ø³µ¼ü£¬Ñ¡Ôñ´´½¨Ö÷·ÖÇø

1 ´´½¨Ò»¸ö·ÖÇø£¬ËùÒÔÊäÈë 1

First sector ÐèÒªÓëÔ­À´µÄ·ÖÇø±£³ÖÒ»ÖÂ¡£ÔÚ±¾Ê¾ÀýÖÐ£¬°´»Ø³µ¼ü²ÉÓÃÄ¬ÈÏÖµ

ÊäÈë×îºóÒ»¸öÉÈÇø±àºÅ£ºÒòÎªÕâÀï½ö´´½¨Ò»¸ö·ÖÇø£¬ËùÒÔ°´»Ø³µ¼ü²ÉÓÃÄ¬ÈÏÖµ

ÊäÈë wq ²¢°´»Ø³µ¼ü£¬¿ªÊ¼·ÖÇø

e2fsck -f /dev/xvdb # ¼ì²éÎÄ¼þÏµÍ³
resize2fs /dev/xvdb # ±ä¸üÎÄ¼þÏµÍ³´óÐ¡

mount /dev/xvdb /transimg

# mount: you must specify the filesystem type
mkfs.ext3 /dev/vdb ¸ñÊ½»¯

##Ñ¹Ëõ
tar -cjf *.tar.bz2 Òª´ò°üµÄÄ¿Â¼»òÎÄ¼þ

##½âÑ¹
tar -jxvf xx.tar.bz2
tar zxvf pythontab.tar.gz

memcached -d -p 11211 -u memcached -m 64 -c 1024 -P -U 0 /var/run/memcached/memcached.pid -U 0
memcached -d -m 1024 -u root -l 127.0.0.1 -p 11211 -c 1024 -P /tmp/memcached.pid

###É¾³ýÖ¸¶¨ÈÕÆÚÎÄ¼þ
find /path -mtime +30 -type f -name \*.zip -exec rm -f {} \;

###Á÷Á¿²é¿´
iftop -i eth1 -P

[rsync]
-a ²ÎÊý£¬Ïàµ±ÓÚ-rlptgoD£¬-r ÊÇµÝ¹é -l ÊÇÁ´½ÓÎÄ¼þ£¬ÒâË¼ÊÇ¿½±´Á´½ÓÎÄ¼þ£»-p ±íÊ¾±£³ÖÎÄ¼þÔ­ÓÐÈ¨ÏÞ£»-t ±£³ÖÎÄ¼þÔ­ÓÐÊ±¼ä£»-g ±£³ÖÎÄ¼þÔ­ÓÐÓÃ»§×é£»-o ±£³ÖÎÄ¼þÔ­ÓÐÊôÖ÷£»-D Ïàµ±ÓÚ¿éÉè±¸ÎÄ¼þ£»
-z ´«ÊäÊ±Ñ¹Ëõ£»
-P ´«Êä½ø¶È£»
-v ´«ÊäÊ±µÄ½ø¶ÈµÈÐÅÏ¢£¬ºÍ-PÓÐµã¹ØÏµ
rsync -avz --delete --exclude Application/Runtime/ userid@172.16.7.158::mokuai /var/www/html/rigouwang/ --password-file=/etc/rsyncd.pwd
rsync -r 172.16.10.5:/etc /tmp 
rsync -av Ô´Ä¿Â¼ Ä¿±êÄ¿Â¼

[inotifywait] Ö»ÒªÊ¹ÓÃinotifywait¼ì²âµ½ÊÂ¼þÊ±£¬×Ô¶¯Ö´ÐÐrsync½øÐÐÍ¬²½²Ù×÷¼´¿É¡£¼ÓÉÏÖ´ÐÐÈ¨ÏÞ²¢ÔÚºóÌ¨ÔËÐÐ¼´¿É
#!/bin/bash
inotifywait -mrq -e create,close_write,move,delete,modify /var/www/html/  | while read a b c
do     
rsync -azP --delete /var/www/html/ root@192.168.94.29:/backup(»òÕßrsync -azp /backup/ rsync_backup@192.168.94.29::backup --password-file=/et
c/rsync.password)

[rsync + inotifywait]
#!/bin/bash
src=/data/                           # ÐèÒªÍ¬²½µÄÔ´Â·¾¶
des=data                             # Ä¿±ê·þÎñÆ÷ÉÏ rsync --daemon ·¢²¼µÄÃû³Æ£¬rsync --daemonÕâÀï¾Í²»×ö½éÉÜÁË£¬ÍøÉÏËÑÒ»ÏÂ£¬±È½Ï¼òµ¥¡£
rsync_passwd_file=/etc/rsyncd.passwd            # rsyncÑéÖ¤µÄÃÜÂëÎÄ¼þ
ip1=192.168.0.18                 # Ä¿±ê·þÎñÆ÷1
ip2=192.168.0.19                 # Ä¿±ê·þÎñÆ÷2
user=root                            # rsync --daemon¶¨ÒåµÄÑéÖ¤ÓÃ»§Ãû
cd ${src}                              # ´Ë·½·¨ÖÐ£¬ÓÉÓÚrsyncÍ¬²½µÄÌØÐÔ£¬ÕâÀï±ØÐëÒªÏÈcdµ½Ô´Ä¿Â¼£¬inotifyÔÙ¼àÌý ./ ²ÅÄÜrsyncÍ¬²½ºóÄ¿Â¼½á¹¹Ò»ÖÂ£¬ÓÐÐËÈ¤µÄÍ¬Ñ§¿ÉÒÔ½øÐÐ¸÷ÖÖ³¢ÊÔ¹Û¿´ÆäÐ§¹û
/usr/local/bin/inotifywait -mrq --format  '%Xe %w%f' -e modify,create,delete,attrib,close_write,move ./ | while read file         # °Ñ¼à¿Øµ½ÓÐ·¢Éú¸ü¸ÄµÄ"ÎÄ¼þÂ·¾¶ÁÐ±í"Ñ­»·
do
        INO_EVENT=$(echo $file | awk '{print $1}')      # °ÑinotifyÊä³öÇÐ¸î °ÑÊÂ¼þÀàÐÍ²¿·Ö¸³Öµ¸øINO_EVENT
        INO_FILE=$(echo $file | awk '{print $2}')       # °ÑinotifyÊä³öÇÐ¸î °ÑÎÄ¼þÂ·¾¶²¿·Ö¸³Öµ¸øINO_FILE
        echo "-------------------------------$(date)------------------------------------"
        echo $file
        #Ôö¼Ó¡¢ÐÞ¸Ä¡¢Ð´ÈëÍê³É¡¢ÒÆ¶¯½øÊÂ¼þ
        #Ôö¡¢¸Ä·ÅÔÚÍ¬Ò»¸öÅÐ¶Ï£¬ÒòÎªËûÃÇ¶¼¿Ï¶¨ÊÇÕë¶ÔÎÄ¼þµÄ²Ù×÷£¬¼´Ê¹ÊÇÐÂ½¨Ä¿Â¼£¬ÒªÍ¬²½µÄÒ²Ö»ÊÇÒ»¸ö¿ÕÄ¿Â¼£¬²»»áÓ°ÏìËÙ¶È¡£
        if [[ $INO_EVENT =~ 'CREATE' ]] || [[ $INO_EVENT =~ 'MODIFY' ]] || [[ $INO_EVENT =~ 'CLOSE_WRITE' ]] || [[ $INO_EVENT =~ 'MOVED_TO' ]]         # ÅÐ¶ÏÊÂ¼þÀàÐÍ
        then
                echo 'CREATE or MODIFY or CLOSE_WRITE or MOVED_TO'
                rsync -avzcR --password-file=${rsync_passwd_file} $(dirname ${INO_FILE}) ${user}@${ip1}::${des} &amp;&amp;         # INO_FILE±äÁ¿´ú±íÂ·¾¶Å¶  -cÐ£ÑéÎÄ¼þÄÚÈÝ
                rsync -avzcR --password-file=${rsync_passwd_file} $(dirname ${INO_FILE}) ${user}@${ip2}::${des}
                 #×ÐÏ¸¿´ ÉÏÃæµÄrsyncÍ¬²½ÃüÁî Ô´ÊÇÓÃÁË$(dirname ${INO_FILE})±äÁ¿ ¼´Ã¿´ÎÖ»Õë¶ÔÐÔµÄÍ¬²½·¢Éú¸Ä±äµÄÎÄ¼þµÄÄ¿Â¼(Ö»Í¬²½Ä¿±êÎÄ¼þµÄ·½·¨ÔÚÉú²ú»·¾³µÄÄ³Ð©¼«¶Ë»·¾³ÏÂ»áÂ©ÎÄ¼þ ÏÖÔÚ¿ÉÒÔÔÚ²»Â©ÎÄ¼þÏÂÒ²ÓÐ²»´íµÄËÙ¶È ×öµ½Æ½ºâ) È»ºóÓÃ-R²ÎÊý°ÑÔ´µÄÄ¿Â¼½á¹¹µÝ¹éµ½Ä¿±êºóÃæ ±£Ö¤Ä¿Â¼½á¹¹Ò»ÖÂÐÔ
        fi
        #É¾³ý¡¢ÒÆ¶¯³öÊÂ¼þ
        if [[ $INO_EVENT =~ 'DELETE' ]] || [[ $INO_EVENT =~ 'MOVED_FROM' ]]
        then
                echo 'DELETE or MOVED_FROM'
                rsync -avzR --delete --password-file=${rsync_passwd_file} $(dirname ${INO_FILE}) ${user}@${ip1}::${des} &amp;&amp;
                rsync -avzR --delete --password-file=${rsync_passwd_file} $(dirname ${INO_FILE}) ${user}@${ip2}::${des}
                #¿´rsyncÃüÁî Èç¹ûÖ±½ÓÍ¬²½ÒÑÉ¾³ýµÄÂ·¾¶${INO_FILE}»á±¨no such or directory´íÎó ËùÒÔÕâÀïÍ¬²½µÄÔ´ÊÇ±»É¾ÎÄ¼þ»òÄ¿Â¼µÄÉÏÒ»¼¶Â·¾¶£¬²¢¼ÓÉÏ--deleteÀ´É¾³ýÄ¿±êÉÏÓÐ¶øÔ´ÖÐÃ»ÓÐµÄÎÄ¼þ£¬ÕâÀï²»ÄÜ×öµ½Ö¸¶¨ÎÄ¼þÉ¾³ý£¬Èç¹ûÉ¾³ýµÄÂ·¾¶Ô½¿¿½ü¸ù£¬ÔòÍ¬²½µÄÄ¿Â¼ÔÂ¶à£¬Í¬²½É¾³ýµÄ²Ù×÷¾ÍÔ½»¨Ê±¼ä¡£ÕâÀïÓÐ¸üºÃ·½·¨µÄÍ¬Ñ§£¬»¶Ó­½»Á÷¡£
        fi
        #ÐÞ¸ÄÊôÐÔÊÂ¼þ Ö¸ touch chgrp chmod chownµÈ²Ù×÷
        if [[ $INO_EVENT =~ 'ATTRIB' ]]
        then
                echo 'ATTRIB'
                if [ ! -d "$INO_FILE" ]                 # Èç¹ûÐÞ¸ÄÊôÐÔµÄÊÇÄ¿Â¼ Ôò²»Í¬²½£¬ÒòÎªÍ¬²½Ä¿Â¼»á·¢ÉúµÝ¹éÉ¨Ãè£¬µÈ´ËÄ¿Â¼ÏÂµÄÎÄ¼þ·¢ÉúÍ¬²½Ê±£¬rsync»áË³´ø¸üÐÂ´ËÄ¿Â¼¡£
                then
                        rsync -avzcR --password-file=${rsync_passwd_file} $(dirname ${INO_FILE}) ${user}@${ip1}::${des} &amp;&amp;            
                        rsync -avzcR --password-file=${rsync_passwd_file} $(dirname ${INO_FILE}) ${user}@${ip2}::${des}
                fi
        fi
done

crontab -e
* */2 * * * rsync -avz --password-file=/etc/rsync-client.pass /data/ root@192.168.0.18::data && rsync -avz --password-file=/etc/rsync-client.pass /data/ root@192.168.0.19::data


[scp]
scp work@192.168.0.10:/home/work/source.txt /home/work/

###php °²×°
ln -s /usr/lib64/libc-client.so /usr/lib/libc-client.so

[https]
wget https://dl.eff.org/certbot-auto
chmod a+x certbot-auto
certbot-auto certonly --text --agree-tos --webroot -w /transimg/www/transportjp -d style.transportjp.com

[extundelete] ÎÄ¼þ»Ö¸´¹¤¾ß
extundelete /dev/vdb --inode 2

ls -id ²é¿´node

[shell]
path=$(cd `dirname $0`; pwd)
nohup mysql -uroot -pMJsujrctG6pU0OUG -h172.24.63.203 < $path/tao86_f_opij.sql 2>&1 &

[mount]
umount /dev/vdc
mount /dev/vdb /transimg


[dd]
dd if=/dev/vdc f=/dev/vdb
