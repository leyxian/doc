du -h --max-depth=1 /

lsof | grep delete

ps -ef | grep php

kill -9 xxxx

whereis httpd

date

cat /dev/null > /var/log/error_log.log

du -sh /* 2>/dev/null | sort -hr | head -3

yum clean

yum clean headers

yum clean packages

yum clean oldheaders

¶Ë¿Ú¼ì²â
netstat -a | egrep 'Proto|LISTEN'

cat /proc/cpuinfo | grep name | cut -f2 -d: | uniq -c 

cat /proc/cpuinfo | grep physical | uniq -c 

cat /proc/meminfo 

ÈÕÖ¾ÇÐ¸î
usr/local/tomcat/apache-tomcat-7.0.54/logs/catalina.out {

	rotate 31

	daily
	
copytruncate

	compress

	notifempty

	missingok
	
dateext

}

mount /dev/xvdb1 /transimg

rotate 31 ±íÊ¾±£Áô31ÌìµÄ±¸·ÝÎÄ¼þ  
daily ±íÊ¾Ã¿ÌìÕûÀíÒ»´Î  
copytruncate ±íÊ¾ÏÈ¸´ÖÆlogÎÄ¼þµÄÄÚÈÝ£¬È»ºóÔÙÇå¿Õ  
compress ±íÊ¾Ñ¹Ëõ±¸·ÖÎÄ¼þ  
missingok ±íÊ¾Èç¹ûÕÒ²»µ½logÎÄ¼þÒ²Ã»OK  
notifempty ±íÊ¾Èç¹ûlogÎÄ¼þÊÇ¿ÕµÄ£¬¾Í²»½øÐÐrotate  
dateext ±íÊ¾±¸·ÝµÄÈÕÖ¾ÎÄ¼þºó×º¸ñÊ½ÎªYYYYMMDD
¿ÉÒÔÍ¨¹ý/usr/sbin/logrotate -f /etc/logrotate.confÀ´Ö´ÐÐ

## ºóÌ¨ÔËÐÐÃüÁî
nohup command {option} > myout.file 2>&1 &?

## ¿ª·Å¶Ë¿Ú
netstat -tunlp


#!/bin/ksh
#×Ô¶¯²éÉ±³¬Ê±»ò½©ËÀµÄ½ø³ÌµÄ½Å±¾   V050930
#ËÄ´¨Ê¡ÀÖÉ½ÊÐÉ³ÍåÇøÓÊÕþ¾Ö ËÎÌÎ 
#crontab -e  
#0,5,10,15,20,25,30,40,45,50,55 * * * * /usr/bin/autokill.sh &  #ÉèÖÃÎªÃ¿5·ÖÖÓ¼ì²éÒ»´Î³¬Ê±½ø³Ì
#ÎªÁË°²È«±£ÏÕÆð¼û,´Ë°æ½Å±¾µÄÇå³ý·¶Î§Îª:ÓÉÖÕ¶ËÆô¶¯µÄ,Õ¼ÓÃCUPÊ±¼ä³¬¹ýÖ¸¶¨Ê±¼ä³¤¶ÈµÄ,·ÇrootÓÃ»§µÄ½ø³Ì»ò½©Ê¬½ø³Ì  ^_^
 
#¼ì²â²ÎÊý
killlog="/tmp/kill.log"    #Ä¬ÈÏ×Ô¶¯Çå³ý³¬Ê±½ø³Ì»ò½©ËÀ½ø³ÌµÄÈÕÖ¾
out=60                     # Ä¬ÈÏµÄ³¬Ê±Ê±¼ä£¬ÒÔÃëÎªµ¥Î»£¬Ä¬ÈÏÎª60Ãë£¬·¶Î§Îª10Ãë--36000Ãë
trap 'rm /tmp/kill.tmp 2>/dev/null' 0 1 2 3 9 15
test $LOGNAME != root && { echo "Sorry ! ±¾ ½Å ±¾ Ö» ÄÜ ÓÉ root ²Ù ×÷ !

" ; exit 1 ; }
test "$out" || { echo "
  ³¬Ê±Ê±ÏÞ²»ÄÜÎª¿Õ
" ; exit 1 ; }
test "$(echo $out | sed -n '/^[0-9][0-9]*$/p')" || { echo "
  ³¬Ê±Ê±ÏÞÖ»ÄÜÎªÕûÊýÖµ
" ; exit 1 ; }
test $out -ge 10 -a $out -le 36000 || { echo "
  ³¬Ê±Ê±ÏÞ·¶Î§Îª10Ãë--36000Ãë
" ; exit 1 ; }
 
#²éÕÒ³¬Ê±»ò½©Ê¬½ø³Ì
ps -efl |awk -v outtest=$out '{ outtime=timetest($14) }
$2~/Z/ || ( $3!~/root/ && $13!~/?/ && outtime=="outtime" ) 
{print $3,$4,$13,$2,$14,$15 }
function timetest(ot)
{
hour=substr(ot,1,2)
min=substr(ot,4,2)
sec=substr(ot,7,8)
if ( hour*3600+min*60+sec > outtest)
return "outtime"
else
return "good" 
} ' >/tmp/kill.tmp 2>/dev/null
 
#±£´æÇå³ýÁÐ±í
if [ -s /tmp/kill.tmp ]
then
pass=0 
error=0
echo "
Çå ³ý Ê± ¼ä:  "$(date +%y/%m/%d-%H:%M:%S)"
" >> $killlog
awk 'BEGIN{printf("%-8s%-8s%-8s%-7s%-10s%-30s
"),"ÓÃ»§Ãû","½ø³ÌºÅ","ÖÕ¶ËºÅ","×´Ì¬","Õ¼ÓÃÊ±¼ä","ÈÎÎñÃû"} 
{ state=statetest($4) ; printf("%-8s%-8s%-8s%-7s%-10s%-30s
"),$1,$2,$3,state,$5,$6} END{print "
"}
function statetest(test)
{  
 if (test=="S") return "Ë¯Ãß"
 if (test=="R") return "ÔËÐÐ"
 if (test=="Z") return "½©Ê¬"
 if (test=="O") return "²»´æÔÚ"
 if (test=="B") return "µÈ´ý"
 if (test=="T") return "Í£Ö¹"
 if (test=="I") return "ÖÐ¼ä"
}' /tmp/kill.tmp >> $killlog 2>/dev/null
 
#Çå³ý½ø³Ì
for pid in $(awk '{print $2}' /tmp/kill.tmp |sort -rn) 
do 
kill -9 $pid  
test $? -eq 0 && 
{ echo "×Ô¶¯Çå³ý½ø³Ì $pid ³É¹¦" | awk '{printf("
%-14s%-10s%-4s"),$1,$2,$3}' ; 
echo "×Ô¶¯Çå³ý½ø³Ì $pid ³É¹¦"   | awk '{printf("%-14s%-10s%-4s
"),$1,$2,$3}' 
>> $killlog 2>/dev/null ;  pass=$((pass+1)) ; } || 
{ echo "×Ô¶¯Çå³ý½ø³Ì $pid Ê§°Ü" | awk '{printf("
%-14s%-10s%-4s"),$1,$2,$3}' ; 
echo "×Ô¶¯Çå³ý½ø³Ì $pid Ê§°Ü"   | awk '{printf("%-14s%-10s%-4s
"),$1,$2,$3}' 
>> $killlog 2>/dev/null ; error=$((error+1)) ; }
done
 
#±£´æ×îÖÕÍ³¼Æ½á¹û
test $error -eq 0 && 
{ echo "´Ë´Î¹²Çå³ý ${pass} ¸ö½ø³Ì³É¹¦" | awk '{printf("

%-14s%-4s%-10s

"),$1,$2,$3}'
  echo "´Ë´Î¹²Çå³ý ${pass} ¸ö½ø³Ì³É¹¦" | awk '{printf("
%-14s%-4s%-10s

"),$1,$2,$3}' 
>> $killlog 2>/dev/null ; } || 
{ echo "´Ë´Î¹²Çå³ý ${pass} ¸ö½ø³Ì³É¹¦ ${error} ¸ö½ø³ÌÊ§°Ü" | 
awk '{printf("

%-14s%-4s%-16s%-10s%-10s

"),$1,$2,$3,$4,$5}' ; 
  echo "´Ë´Î¹²Çå³ý ${pass} ¸ö½ø³Ì³É¹¦ ${error} ¸ö½ø³ÌÊ§°Ü" | 
awk '{printf("

%-14s%-4s%-16s%-10s%-10s

"),$1,$2,$3,$4,$5}' >> $killlog 2>/dev/null ; }
fi

iptables -L
iptables -I INPUT -s 183.160.107.239 -p tcp --dport 3306 -j ACCEPT

iptables -I INPUT -s 180.162.0.0/16 -p tcp --dport 3306 -j ACCEPT


######script.sh
#!/bin/sh
MYSQL="mysql -h123.57.133.51 -uley -pzq1988 --default-character-set=utf8 -A -N"
stime=`date -d "20 day ago" +%s`
sql="SELECT COUNT(*) AS c FROM mycrm.xy_account WHERE style=0 AND ((block=0) or  (block=1 and blocktime>$stime and blocktime is not null))"
# echo $sql
result="$($MYSQL -e "$sql")"
# result=726
pagesize=30
page=$(($result/$pagesize+1))
# echo $page
for((k=1;k<=$page;k++))
do
    MM=`ps -aux |grep "php /data/cron/script2.php $k $pagesize"$ |grep -v "grep" |wc -l`
    if [ "$MM" == "0" ]; then
        echo "$k restart"
        nohup php /data/cron/script2.php $k $pagesize >> /data/cron/script2.log 2>&1 &
    fi
done
MM=`ps -aux |grep "php /data/cron/createsendorder.php" |grep -v "grep" |wc -l`
if [ "$MM" == "0" ]; then
    nohup php /data/cron/createsendorder.php >> /data/cron/createsendorder.log 2>&1 &
fi

######clear
#!/bin/sh
if [ $# -lt 1 ]
then
  echo "缺少参数"
  exit 1
fi
 
PROCESS=`ps -ef|grep $1|grep -v grep|grep -v PPID|awk '{ print $2}'`
for i in $PROCESS
do
  echo "Kill the $1 process [ $i ]"
  kill -9 $i
done