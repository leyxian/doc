git 使用大全

【密钥】
ssh-keygen -t rsa -C "ah.liulei@foxmail.com"
一直Enter
造密钥 默认存在在用户文件夹/.ssh/id_rsa.pub
例：C:/Users/user/(windows) ~/.ssh(linux)

【绑定用户】
git config --global user.name wxx

git config --global user.email wxx420@foxmail.com

【操作】
git init
把当前文件夹初始化为git本地仓库

git add .
将当前文件夹下所有文件加入git跟踪

git commit -am 'init'
记录下已经修改的文件

git push origin [远程仓库只有一个可不写,默认,后面命令同理]
推送本地日志到远程origin仓库

git push -u origin master
推送本地的master分支推送到origin主机的master分支(-u origin [origin设为默认主机])

git push -f origin master
强制覆盖推送到远程仓库

git pull <远程主机名> <远程分支名>:<本地分支名>
例：git pull origin master
取回远程主机某个分支的更新，再与本地的指定分支合并

git fetch 
下载远程origin仓库日志

git remote add origin url
添加远程仓库

git remote remove origin
删除远程仓库

git fetch
git merge master origin/master
合并远程仓库，实际是获取别人提交的远程仓库日志
有冲突，找到冲突的文件，备份转移。在git merge,在比较备份和获取的文件，进行调整修改在推送远程仓库

git remote -v
查看所有远程仓库

git rm -r --cache /cache/*
删除跟踪的文件

【分支系统】
git branch test
【删除分支】
git branch -D test
git checkout test
git push 本地分支:远程分支

【分支合并】
git merge 分支名

【提取分支文件】
git checkout 分支名 文件

【数据库维护】
git count-objects -v

git gc

【覆盖本地】
git fetch --all
git reset --hard origin/master

【屏蔽文件】
.gitignore
使用通配符屏蔽不需要的文件或目录
*.log   所有以.log为结尾的文件
data/*  目录中结构中出现data,例：/data/*,/upload/data/*,……
/data/* 根目录下data

【清空文件】
git clean  -d  -fx

<!-- php -->
.svn/
cache/
tmp/
temp/
upload/
*.php.tpl
*.cache
*.log
*.sql
*.zip